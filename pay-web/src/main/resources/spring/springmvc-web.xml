<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/mvc
	   http://www.springframework.org/schema/mvc/spring-mvc.xsd">


    <context:component-scan base-package="com.ewfresh"/>

    <context:annotation-config/>

    <mvc:annotation-driven/>

    <mvc:default-servlet-handler/>

    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/"/>
        <property name="suffix" value=".html"/>
    </bean>
    <bean id="redisClusterConfiguration" class="org.springframework.data.redis.connection.RedisClusterConfiguration">
        <property name="clusterNodes">
            <set>
                <bean class="org.springframework.data.redis.connection.RedisNode">
                    <constructor-arg name="host" value="${redis.node1.ip}"/>
                    <constructor-arg name="port" value="${redis.node1.port}"/>
                </bean>
                <bean class="org.springframework.data.redis.connection.RedisNode">
                    <constructor-arg name="host" value="${redis.node2.ip}"/>
                    <constructor-arg name="port" value="${redis.node2.port}"/>
                </bean>
                <bean class="org.springframework.data.redis.connection.RedisNode">
                    <constructor-arg name="host" value="${redis.node3.ip}"/>
                    <constructor-arg name="port" value="${redis.node3.port}"/>
                </bean>
                <bean class="org.springframework.data.redis.connection.RedisNode">
                    <constructor-arg name="host" value="${redis.node4.ip}"/>
                    <constructor-arg name="port" value="${redis.node4.port}"/>
                </bean>
                <bean class="org.springframework.data.redis.connection.RedisNode">
                    <constructor-arg name="host" value="${redis.node5.ip}"/>
                    <constructor-arg name="port" value="${redis.node5.port}"/>
                </bean>
                <bean class="org.springframework.data.redis.connection.RedisNode">
                    <constructor-arg name="host" value="${redis.node6.ip}"/>
                    <constructor-arg name="port" value="${redis.node6.port}"/>
                </bean>
            </set>
        </property>
    </bean>
    <bean id="jedisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
        <property name="usePool" value="true"/>
        <property name="timeout" value="${redis.timeout}"/>
        <constructor-arg name="clusterConfig" ref="redisClusterConfiguration"/>
    </bean>

    <bean id="redisTemplate" class="org.springframework.data.redis.core.StringRedisTemplate">
        <property name="connectionFactory" ref="jedisConnectionFactory"/>
    </bean>

   <!-- <mvc:interceptors>
        <mvc:interceptor>
            <mvc:mapping path="/**"/>
            <bean class="com.ewfresh.commons.interceptor.CheckIfTimeoutInterceptor"></bean>
        </mvc:interceptor>
        <mvc:interceptor>
            <mvc:mapping path="/t/**"/>
            <bean class="com.ewfresh.commons.interceptor.CheckUserStatusInterceptor">
                <property name="getUserJsonURL" value="${interceptor.address}/t/httpClintGetUserByid.htm"/>
            </bean>
        </mvc:interceptor>
        <mvc:interceptor>
            <mvc:mapping path="/t/**"/>
            <bean class="com.ewfresh.commons.interceptor.AuthorityInterceptor">
                <property name="getResIdURL" value="${interceptor.address}/t/resources/queryAppByLocation.htm"/>
                <property name="getResourcesURL"
                          value="${interceptor.address}/t/resources/queryAllResurcesByUid.htm"/>
            </bean>
        </mvc:interceptor>
        <mvc:interceptor>
            <mvc:mapping path="/t/**"/>
            <bean class="com.ewfresh.commons.interceptor.LogIntercept">
                <property name="insertLogURL" value="${interceptor.address}/t/operationLog/addOneLog.htm"/>
                <property name="getUriId" value="${interceptor.address}/t/resources/queryAppByLocation.htm"/>
            </bean>
        </mvc:interceptor>
    </mvc:interceptors>-->
</beans>






